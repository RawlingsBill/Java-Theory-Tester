/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.theorttest2;
import java.util.Random;


/**
 *
 * @author billr
 */
public class TheoryTest extends javax.swing.JFrame {

    public String[] answers = {"Alt_route_for_heavy_vehicles","Contra_bus_flow_lane","Crosswinds",
    "Dual_carriage ends","Dual_carriageway_crossroads","Lane_loss","Low_flying_aircraft",
    "Max_vehicle_length","Move_left_two_lanes","Start_climbing_lane"};
    
    String[] answers2 = {"Alternative route for heavy vehicles","Contra flow bus lane","Crosswinds",
    "Dual carriageway ends","Crossroad on Dual carriageway","Loss on Lane","Low flying aircraft",
    "Maximum vehicle length","Move left two lanes","Start of climbing lane"};
    
    public int questions[] = new int[5];
    
		int correct = 0;
		int incorrect = 0;
                int count = 0;
                int countTest = 0;

    Random r =  new Random();
        int randomNum=r.nextInt(10);
        
    boolean usedQuestions[] = new boolean[10];    
    
    
    
    /**
     * Creates new form TheoryTest
     */
    public TheoryTest() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        testAnswer = new javax.swing.JComboBox<>();
        next = new javax.swing.JButton();
        textfield = new javax.swing.JTextField();
        submit = new javax.swing.JButton();
        explan = new javax.swing.JLabel();
        buttonResults = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayJTextArea = new javax.swing.JTextArea();
        explan1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/"+answers[randomNum]+".png")));

        testAnswer.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        testAnswer.setMaximumRowCount(3);
        testAnswer.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Alternative route for heavy vehicles", "Contra flow bus lane", "Crosswinds", "Dual carriageway ends", "Crossroad on Dual carriageway", "Loss on Lane", "Low flying aircraft", "Maximum vehicle length", "Move left two lanes", "Start of climbing lane" }));
        testAnswer.setLightWeightPopupEnabled(false);

        next.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        next.setText("Next Question");
        next.setEnabled(false);
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        textfield.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        textfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textfield.setEnabled(false);

        submit.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        submit.setText("Submit");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        explan.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        explan.setText("Select Explanation");

        buttonResults.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        buttonResults.setText("Reset");
        buttonResults.setVisible( false );
        buttonResults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonResultsActionPerformed(evt);
            }
        });

        displayJTextArea.setColumns(20);
        displayJTextArea.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        displayJTextArea.setRows(5);
        displayJTextArea.setText("Test\tPercentage\n");
        displayJTextArea.setEnabled(false);
        jScrollPane1.setViewportView(displayJTextArea);

        explan1.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        explan1.setText("Previous Scores");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(testAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(explan))
                                .addGap(56, 56, 56)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(next)
                                .addGap(83, 83, 83)
                                .addComponent(buttonResults)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(submit)
                                .addGap(131, 131, 131))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 688, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(explan1)
                .addGap(87, 87, 87))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(186, 186, 186)
                        .addComponent(explan)
                        .addGap(18, 18, 18)
                        .addComponent(testAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(35, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(next)
                    .addComponent(submit)
                    .addComponent(buttonResults))
                .addGap(87, 87, 87))
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(explan1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
        
    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        next();
    }//GEN-LAST:event_nextActionPerformed

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
       check();
    }//GEN-LAST:event_submitActionPerformed

    private void buttonResultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonResultsActionPerformed
        reset();
    }//GEN-LAST:event_buttonResultsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TheoryTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TheoryTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TheoryTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TheoryTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TheoryTest().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonResults;
    private javax.swing.JTextArea displayJTextArea;
    private javax.swing.JLabel explan;
    private javax.swing.JLabel explan1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton next;
    private javax.swing.JButton submit;
    private javax.swing.JComboBox<String> testAnswer;
    private javax.swing.JTextField textfield;
    // End of variables declaration//GEN-END:variables


    
    private void check() {
        count ++;
        
        usedQuestions[randomNum] = true;
        
        submit.setEnabled( false );
        
            String answer = (String) testAnswer.getSelectedItem();

            //compare input answer with stored answer and update counts of correct or incorrect
            if (answer.equals(answers2[randomNum])) {
                correct++;
                
                                textfield.setText("Well done, that is the correct answer");
            }
            else {
				incorrect ++;	
                                textfield.setText("Sorry, that is incorrect\nThe answer we were looking for was " + answers2[randomNum]);
                                
            }
            
            next.setEnabled( true );
            testAnswer.setEnabled( false );
            
            for (int x=0;x<5;x++){
            
            questions[x] = randomNum;
            
            }
                
    }
    
    private void next(){
        
        do {
                randomNum = r.nextInt(10);
            } while (usedQuestions[randomNum] == true );
			
       
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/"+answers[randomNum]+".png")));
        submit.setEnabled( true );
        next.setEnabled( false );
        textfield.setText("");
        testAnswer.setSelectedIndex(0);
        testAnswer.setEnabled( true );
        
        if (count == 5){
        
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Testover.png")));
        submit.setEnabled( false );
        testAnswer.setEnabled( false );
        int percentage = ((correct*100)/5) ;
        textfield.setText("Your score is " + correct +"/5. That is " + percentage + "%.");
        
        buttonResults.setVisible( true );
        }
    }
    
    private void reset(){
        countTest ++;
        
        
        displayJTextArea.append( countTest + "\t" );
        
        int percentage = ((correct*100)/5) ;
        
        displayJTextArea.append( percentage + "\n" );
        
        count = 0;
        
        
        
        if (count == 0){
        randomNum=r.nextInt(10);
            
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/"+answers[randomNum]+".png")));
        submit.setEnabled( true );
        testAnswer.setEnabled( true );
        
        textfield.setText("");
        
        correct = 0;
        
        usedQuestions = new boolean[10];
        
        buttonResults.setVisible( false );
        }
    }
    
           
}
